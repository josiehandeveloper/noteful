{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/josephinehan/projects/noteful/src/NoteContainer.js\";\nimport React from 'react';\nimport store from './store';\nexport default function NoteContainer() {\n  const {\n    folderId\n  } = this.props.match.params.folderId;\n  const note = store.find(n => n.id === folderId);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"Note\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: note.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), note.content.map((n, i) => n === '' ? /*#__PURE__*/_jsxDEV(\"br\", {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"n\", {\n      children: n\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n/*export default function PoemPage(props) {\n  const poem = POEMS.find(p =>\n    p.id === props.match.params.poemId\n  )\n  return (\n    <article className='Poem'>\n      <h2>{poem.title}</h2>\n      {poem.content.map((p, i) =>\n        (p === '')\n          ? <br key={i} />\n          : <p key={i}>{p}</p>\n      )}\n    </article>\n  )\n}*/\n\n_c = NoteContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteContainer\");","map":{"version":3,"sources":["/Users/josephinehan/projects/noteful/src/NoteContainer.js"],"names":["React","store","NoteContainer","folderId","props","match","params","note","find","n","id","name","content","map","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,QAAM;AAACC,IAAAA;AAAD,MAAa,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,QAA3C;AACA,QAAMI,IAAI,GAAGN,KAAK,CAACO,IAAN,CAAWC,CAAC,IACvBA,CAAC,CAACC,EAAF,KAASP,QADE,CAAb;AAIA,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,4BACE;AAAA,gBAAKI,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAiB,CAACJ,CAAD,EAAIK,CAAJ,KACfL,CAAC,KAAK,EAAP,gBACI,kBAASK,CAAT;AAAA;AAAA;AAAA;AAAA,YADJ,gBAEI;AAAA,gBAAYL;AAAZ,OAAQK,CAAR;AAAA;AAAA;AAAA;AAAA,YAHL,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;AAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAnCwBZ,a","sourcesContent":["import React from 'react'\nimport store from './store'\n\nexport default function NoteContainer() {\n  const {folderId} = this.props.match.params.folderId;\n  const note = store.find(n => \n    n.id === folderId\n    )\n  \n  return (\n    <article className='Note'>\n      <h2>{note.name}</h2>\n      {note.content.map((n, i) =>\n        (n === '')\n          ? <br key={i} />\n          : <n key={i}>{n}</n>\n      )}\n    </article>\n  )\n}\n\n\n\n\n/*export default function PoemPage(props) {\n  const poem = POEMS.find(p =>\n    p.id === props.match.params.poemId\n  )\n  return (\n    <article className='Poem'>\n      <h2>{poem.title}</h2>\n      {poem.content.map((p, i) =>\n        (p === '')\n          ? <br key={i} />\n          : <p key={i}>{p}</p>\n      )}\n    </article>\n  )\n}*/\n"]},"metadata":{},"sourceType":"module"}