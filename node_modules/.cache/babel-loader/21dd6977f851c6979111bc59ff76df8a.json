{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/josephinehan/projects/noteful/src/NoteContainer.js\";\nimport React from 'react';\nimport store from './store';\nexport default function NoteContainer(props) {\n  const store = notes.find(n => n.id === props.match.params.foldersId);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"Notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: notes.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), notes.content.map((n, i) => n === '' ? /*#__PURE__*/_jsxDEV(\"br\", {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"n\", {\n      children: n\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = NoteContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteContainer\");","map":{"version":3,"sources":["/Users/josephinehan/projects/noteful/src/NoteContainer.js"],"names":["React","store","NoteContainer","props","notes","find","n","id","match","params","foldersId","name","content","map","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAKA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,QAAMF,KAAK,GAAGG,KAAK,CAACC,IAAN,CAAWC,CAAC,IACxBA,CAAC,CAACC,EAAF,KAASJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,SADhB,CAAd;AAGA,sBACE;AAAS,IAAA,SAAS,EAAC,OAAnB;AAAA,4BACE;AAAA,gBAAKN,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,EAEGP,KAAK,CAACQ,OAAN,CAAcC,GAAd,CAAkB,CAACP,CAAD,EAAIQ,CAAJ,KAChBR,CAAC,KAAK,EAAP,gBACI,kBAASQ,CAAT;AAAA;AAAA;AAAA;AAAA,YADJ,gBAEI;AAAA,gBAAYR;AAAZ,OAAQQ,CAAR;AAAA;AAAA;AAAA;AAAA,YAHL,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;KAduBZ,a","sourcesContent":["import React from 'react'\nimport store from './store'\n\n\n\n\nexport default function NoteContainer(props) {\n  const store = notes.find(n =>\n    n.id === props.match.params.foldersId\n  )\n  return (\n    <article className='Notes'>\n      <h2>{notes.name}</h2>\n      {notes.content.map((n, i) =>\n        (n === '')\n          ? <br key={i} />\n          : <n key={i}>{n}</n>\n      )}\n    </article>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}